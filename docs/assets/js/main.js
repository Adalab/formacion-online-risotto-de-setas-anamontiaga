"use strict";const title=document.querySelector(".header__title"),articles=document.querySelectorAll(".main__article--description--title"),currency=document.getElementsByTagName("span"),brands=document.querySelectorAll(".main__article--description--brand"),quantities=document.querySelectorAll(".main__article--description--weight"),prices=document.querySelectorAll(".main__articule--description--price"),itemsInput=document.querySelectorAll(".items__input"),subtotal=document.querySelector(".footer__subtotal--number");let totalItems=document.querySelector(".footer__items--number");const getRecipe=()=>{fetch("https://raw.githubusercontent.com/Adalab/recipes-data/master/rissoto-setas.json").then(e=>e.json()).then(e=>{const t=e.recipe;title.innerHTML=t.name;for(const e of currency)e.innerHTML=t.currency;const n=t.ingredients;for(let e=0;e<n.length;e+=1){for(let e=0;e<articles.length;e+=1)articles[e].innerHTML=n[e].product;for(let e=0;e<brands.length;e+=1)n[e].brand?brands[e].innerHTML=n[e].brand:brands[e].innerHTML="";for(let e=0;e<quantities.length;e+=1)quantities[e].innerHTML=n[e].quantity;for(let e=0;e<prices.length;e+=1)prices[e].innerHTML=n[e].price;for(let e=0;e<itemsInput.length;e+=1)itemsInput[e].value=n[e].items}})};fetch("https://raw.githubusercontent.com/Adalab/recipes-data/master/rissoto-setas.json").then(e=>e.json()).then(e=>{const t=e.recipe;title.innerHTML=t.name;for(const e of currency)e.innerHTML=t.currency;const n=t.ingredients;for(let e=0;e<n.length;e+=1){for(let e=0;e<articles.length;e+=1)articles[e].innerHTML=n[e].product;for(let e=0;e<brands.length;e+=1)n[e].brand?brands[e].innerHTML=n[e].brand:brands[e].innerHTML="";for(let e=0;e<quantities.length;e+=1)quantities[e].innerHTML=n[e].quantity;for(let e=0;e<prices.length;e+=1)prices[e].innerHTML=n[e].price;for(let e=0;e<itemsInput.length;e+=1)itemsInput[e].value=n[e].items}});const itemsPrice=()=>{for(let e=0;e<itemsInput.length;e+=1);};let sum=0,itemsArray=[];const listenInput=()=>{for(let e=0;e<itemsInput.length;e++)console.log(itemsInput[e].value),itemsArray.push(itemsInput[e].value)};listenInput(),console.log(itemsArray);const subtotalCount=()=>{let e=[];for(let t=0;t<prices.length;t+=1)e.push(parseFloat(prices[t]))};subtotalCount();